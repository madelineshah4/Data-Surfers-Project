radius = 5, stroke = FALSE, fillOpacity = 0.8) %>%
addLegend("bottomright",
colors = rev(heat.colors(5)),
labels = round(seq(min(Location_Groups$Average_SL_Increase),
max(Location_Groups$Average_SL_Increase),
length.out = 5), 2),
title = "Average SL Increase (mm)")
map
View(`PORTLAND__(MAINE)`)
View(BOSTON)
View(BRIDGEPORT)
subset_data <- data[data$Latitude >= 35 & data$Latitude <= 50 & data$Longitude >= -80 & data$Longitude <= -73, ]
# Group by name
NY_Data_groups <- split(NY_Data, NY_Data$Name)
for (name in names(NY_Data_groups)) {
# Replace spaces with underscores in the name
df_name <- gsub(" ", "_", name)
# Assign the group to a new data frame with the modified name
assign(df_name, NY_Data_groups[[name]])
}
# Create a new column for m in y = mx + b (average increase of sea level)
All_Ms <- numeric(length(NY_Data_groups))
for (i in 1:length(NY_Data_groups)) {
df <- NY_Data_groups[[i]]
lm_model <- lm(SL_mm ~ Year, data = df)
m <- coef(lm_model)[2]
All_Ms[i] <- m
}
# Rank each location by average increase in SL (high to low)
Location_Groups <- NY_Data |> group_by(Name) |>
summarise(
Longitude = mean(Longitude),
Latitude = mean(Latitude),
Max_SL = max(SL_mm),
Min_SL = min(SL_mm)
)
Location_Groups$Average_SL_Increase <- All_Ms
Location_Groups <- Location_Groups |> arrange(desc(Average_SL_Increase))
colorize <- colorNumeric(palette = "RdYlBu",
domain = Location_Groups$Average_SL_Increase)
map <- leaflet(Location_Groups) %>%
addTiles() %>%
addCircleMarkers(~Longitude, ~Latitude,
color = ~colorize(Average_SL_Increase),
radius = 5, stroke = FALSE, fillOpacity = 0.8) %>%
addLegend("bottomright",
colors = rev(heat.colors(5)),
labels = round(seq(min(Location_Groups$Average_SL_Increase),
max(Location_Groups$Average_SL_Increase),
length.out = 5), 2),
title = "Average SL Increase (mm)")
map
NY_Data <- data[data$Latitude >= 35 & data$Latitude <= 50 & data$Longitude >= -80 & data$Longitude <= -73, ]
# Group by name
NY_Data_groups <- split(NY_Data, NY_Data$Name)
for (name in names(NY_Data_groups)) {
# Replace spaces with underscores in the name
df_name <- gsub(" ", "_", name)
# Assign the group to a new data frame with the modified name
assign(df_name, NY_Data_groups[[name]])
}
# Create a new column for m in y = mx + b (average increase of sea level)
All_Ms <- numeric(length(NY_Data_groups))
for (i in 1:length(NY_Data_groups)) {
df <- NY_Data_groups[[i]]
lm_model <- lm(SL_mm ~ Year, data = df)
m <- coef(lm_model)[2]
All_Ms[i] <- m
}
# Rank each location by average increase in SL (high to low)
Location_Groups <- NY_Data |> group_by(Name) |>
summarise(
Longitude = mean(Longitude),
Latitude = mean(Latitude),
Max_SL = max(SL_mm),
Min_SL = min(SL_mm)
)
Location_Groups$Average_SL_Increase <- All_Ms
Location_Groups <- Location_Groups |> arrange(desc(Average_SL_Increase))
colorize <- colorNumeric(palette = "RdYlBu",
domain = Location_Groups$Average_SL_Increase)
map <- leaflet(Location_Groups) %>%
addTiles() %>%
addCircleMarkers(~Longitude, ~Latitude,
color = ~colorize(Average_SL_Increase),
radius = 5, stroke = FALSE, fillOpacity = 0.8) %>%
addLegend("bottomright",
colors = rev(heat.colors(5)),
labels = round(seq(min(Location_Groups$Average_SL_Increase),
max(Location_Groups$Average_SL_Increase),
length.out = 5), 2),
title = "Average SL Increase (mm)")
map
View(`PHILADELPHIA_(PIER_9N)`)
NY_Data <- data[data$Latitude >= 35 & data$Latitude <= 50 & data$Longitude >= -75 & data$Longitude <= -73, ]
# Group by name
NY_Data_groups <- split(NY_Data, NY_Data$Name)
for (name in names(NY_Data_groups)) {
# Replace spaces with underscores in the name
df_name <- gsub(" ", "_", name)
# Assign the group to a new data frame with the modified name
assign(df_name, NY_Data_groups[[name]])
}
# Create a new column for m in y = mx + b (average increase of sea level)
All_Ms <- numeric(length(NY_Data_groups))
for (i in 1:length(NY_Data_groups)) {
df <- NY_Data_groups[[i]]
lm_model <- lm(SL_mm ~ Year, data = df)
m <- coef(lm_model)[2]
All_Ms[i] <- m
}
# Rank each location by average increase in SL (high to low)
Location_Groups <- NY_Data |> group_by(Name) |>
summarise(
Longitude = mean(Longitude),
Latitude = mean(Latitude),
Max_SL = max(SL_mm),
Min_SL = min(SL_mm)
)
Location_Groups$Average_SL_Increase <- All_Ms
Location_Groups <- Location_Groups |> arrange(desc(Average_SL_Increase))
colorize <- colorNumeric(palette = "RdYlBu",
domain = Location_Groups$Average_SL_Increase)
map <- leaflet(Location_Groups) %>%
addTiles() %>%
addCircleMarkers(~Longitude, ~Latitude,
color = ~colorize(Average_SL_Increase),
radius = 5, stroke = FALSE, fillOpacity = 0.8) %>%
addLegend("bottomright",
colors = rev(heat.colors(5)),
labels = round(seq(min(Location_Groups$Average_SL_Increase),
max(Location_Groups$Average_SL_Increase),
length.out = 5), 2),
title = "Average SL Increase (mm)")
map
View(ATLANTIC_CITY)
View(CAPE_MAY)
View(`NEW_YORK_(THE_BATTERY)`)
View(CAPE_MAY)
NY_Data <- data[data$Latitude >= 39 & data$Latitude <= 50 & data$Longitude >= -75 & data$Longitude <= -73, ]
# Group by name
NY_Data_groups <- split(NY_Data, NY_Data$Name)
for (name in names(NY_Data_groups)) {
# Replace spaces with underscores in the name
df_name <- gsub(" ", "_", name)
# Assign the group to a new data frame with the modified name
assign(df_name, NY_Data_groups[[name]])
}
# Create a new column for m in y = mx + b (average increase of sea level)
All_Ms <- numeric(length(NY_Data_groups))
for (i in 1:length(NY_Data_groups)) {
df <- NY_Data_groups[[i]]
lm_model <- lm(SL_mm ~ Year, data = df)
m <- coef(lm_model)[2]
All_Ms[i] <- m
}
# Rank each location by average increase in SL (high to low)
Location_Groups <- NY_Data |> group_by(Name) |>
summarise(
Longitude = mean(Longitude),
Latitude = mean(Latitude),
Max_SL = max(SL_mm),
Min_SL = min(SL_mm)
)
Location_Groups$Average_SL_Increase <- All_Ms
Location_Groups <- Location_Groups |> arrange(desc(Average_SL_Increase))
colorize <- colorNumeric(palette = "RdYlBu",
domain = Location_Groups$Average_SL_Increase)
map <- leaflet(Location_Groups) %>%
addTiles() %>%
addCircleMarkers(~Longitude, ~Latitude,
color = ~colorize(Average_SL_Increase),
radius = 5, stroke = FALSE, fillOpacity = 0.8) %>%
addLegend("bottomright",
colors = rev(heat.colors(5)),
labels = round(seq(min(Location_Groups$Average_SL_Increase),
max(Location_Groups$Average_SL_Increase),
length.out = 5), 2),
title = "Average SL Increase (mm)")
map
View(ATLANTIC_CITY)
NY_Data <- data[data$Latitude >= 39.5 & data$Latitude <= 50 & data$Longitude >= -75 & data$Longitude <= -73, ]
# Group by name
NY_Data_groups <- split(NY_Data, NY_Data$Name)
for (name in names(NY_Data_groups)) {
# Replace spaces with underscores in the name
df_name <- gsub(" ", "_", name)
# Assign the group to a new data frame with the modified name
assign(df_name, NY_Data_groups[[name]])
}
# Create a new column for m in y = mx + b (average increase of sea level)
All_Ms <- numeric(length(NY_Data_groups))
for (i in 1:length(NY_Data_groups)) {
df <- NY_Data_groups[[i]]
lm_model <- lm(SL_mm ~ Year, data = df)
m <- coef(lm_model)[2]
All_Ms[i] <- m
}
# Rank each location by average increase in SL (high to low)
Location_Groups <- NY_Data |> group_by(Name) |>
summarise(
Longitude = mean(Longitude),
Latitude = mean(Latitude),
Max_SL = max(SL_mm),
Min_SL = min(SL_mm)
)
Location_Groups$Average_SL_Increase <- All_Ms
Location_Groups <- Location_Groups |> arrange(desc(Average_SL_Increase))
colorize <- colorNumeric(palette = "RdYlBu",
domain = Location_Groups$Average_SL_Increase)
map <- leaflet(Location_Groups) %>%
addTiles() %>%
addCircleMarkers(~Longitude, ~Latitude,
color = ~colorize(Average_SL_Increase),
radius = 5, stroke = FALSE, fillOpacity = 0.8) %>%
addLegend("bottomright",
colors = rev(heat.colors(5)),
labels = round(seq(min(Location_Groups$Average_SL_Increase),
max(Location_Groups$Average_SL_Increase),
length.out = 5), 2),
title = "Average SL Increase (mm)")
map
data <- read.csv("C:/Users/Madeline/OneDrive/Documents/.github/Data_Competition_2024/SL_DATA.csv")
NY_Data <- data[data$Latitude >= 39.5 & data$Latitude <= 50 & data$Longitude >= -75 & data$Longitude <= -73, ]
# Group by name
NY_Data_groups <- split(NY_Data, NY_Data$Name)
for (name in names(NY_Data_groups)) {
# Replace spaces with underscores in the name
df_name <- gsub(" ", "_", name)
# Assign the group to a new data frame with the modified name
assign(df_name, NY_Data_groups[[name]])
}
# Create a new column for m in y = mx + b (average increase of sea level)
All_Ms <- numeric(length(NY_Data_groups))
for (i in 1:length(NY_Data_groups)) {
df <- NY_Data_groups[[i]]
lm_model <- lm(SL_mm ~ Year, data = df)
m <- coef(lm_model)[2]
All_Ms[i] <- m
}
# Rank each location by average increase in SL (high to low)
Location_Groups <- NY_Data |> group_by(Name) |>
summarise(
Longitude = mean(Longitude),
Latitude = mean(Latitude),
Max_SL = max(SL_mm),
Min_SL = min(SL_mm)
)
Location_Groups$Average_SL_Increase <- All_Ms
Location_Groups <- Location_Groups |> arrange(desc(Average_SL_Increase))
colorize <- colorNumeric(palette = "RdYlBu",
domain = Location_Groups$Average_SL_Increase)
map <- leaflet(Location_Groups) %>%
addTiles() %>%
addCircleMarkers(~Longitude, ~Latitude,
color = ~colorize(Average_SL_Increase),
radius = 5, stroke = FALSE, fillOpacity = 0.8) %>%
addLegend("bottomright",
colors = rev(heat.colors(5)),
labels = round(seq(min(Location_Groups$Average_SL_Increase),
max(Location_Groups$Average_SL_Increase),
length.out = 5), 2),
title = "Average SL Increase (mm)")
map
View(NY_Data)
View(NY_Data)
View(BRIDGEPORT)
View(PORT_JEFFERSON)
NY_Data <- data[data$Latitude >= 39.5 & data$Latitude <= 50 & data$Longitude >= -75 & data$Longitude <= -73.1, ]
# Group by name
NY_Data_groups <- split(NY_Data, NY_Data$Name)
for (name in names(NY_Data_groups)) {
# Replace spaces with underscores in the name
df_name <- gsub(" ", "_", name)
# Assign the group to a new data frame with the modified name
assign(df_name, NY_Data_groups[[name]])
}
# Create a new column for m in y = mx + b (average increase of sea level)
All_Ms <- numeric(length(NY_Data_groups))
for (i in 1:length(NY_Data_groups)) {
df <- NY_Data_groups[[i]]
lm_model <- lm(SL_mm ~ Year, data = df)
m <- coef(lm_model)[2]
All_Ms[i] <- m
}
# Rank each location by average increase in SL (high to low)
Location_Groups <- NY_Data |> group_by(Name) |>
summarise(
Longitude = mean(Longitude),
Latitude = mean(Latitude),
Max_SL = max(SL_mm),
Min_SL = min(SL_mm)
)
Location_Groups$Average_SL_Increase <- All_Ms
Location_Groups <- Location_Groups |> arrange(desc(Average_SL_Increase))
colorize <- colorNumeric(palette = "RdYlBu",
domain = Location_Groups$Average_SL_Increase)
map <- leaflet(Location_Groups) %>%
addTiles() %>%
addCircleMarkers(~Longitude, ~Latitude,
color = ~colorize(Average_SL_Increase),
radius = 5, stroke = FALSE, fillOpacity = 0.8) %>%
addLegend("bottomright",
colors = rev(heat.colors(5)),
labels = round(seq(min(Location_Groups$Average_SL_Increase),
max(Location_Groups$Average_SL_Increase),
length.out = 5), 2),
title = "Average SL Increase (mm)")
map
NY_Data <- data[data$Latitude >= 39.5 & data$Latitude <= 50 & data$Longitude >= -75 & data$Longitude <= -73, ]
# Group by name
NY_Data_groups <- split(NY_Data, NY_Data$Name)
for (name in names(NY_Data_groups)) {
# Replace spaces with underscores in the name
df_name <- gsub(" ", "_", name)
# Assign the group to a new data frame with the modified name
assign(df_name, NY_Data_groups[[name]])
}
# Create a new column for m in y = mx + b (average increase of sea level)
All_Ms <- numeric(length(NY_Data_groups))
for (i in 1:length(NY_Data_groups)) {
df <- NY_Data_groups[[i]]
lm_model <- lm(SL_mm ~ Year, data = df)
m <- coef(lm_model)[2]
All_Ms[i] <- m
}
# Rank each location by average increase in SL (high to low)
Location_Groups <- NY_Data |> group_by(Name) |>
summarise(
Longitude = mean(Longitude),
Latitude = mean(Latitude),
Max_SL = max(SL_mm),
Min_SL = min(SL_mm)
)
Location_Groups$Average_SL_Increase <- All_Ms
Location_Groups <- Location_Groups |> arrange(desc(Average_SL_Increase))
colorize <- colorNumeric(palette = "RdYlBu",
domain = Location_Groups$Average_SL_Increase)
map <- leaflet(Location_Groups) %>%
addTiles() %>%
addCircleMarkers(~Longitude, ~Latitude,
color = ~colorize(Average_SL_Increase),
radius = 5, stroke = FALSE, fillOpacity = 0.8) %>%
addLegend("bottomright",
colors = rev(heat.colors(5)),
labels = round(seq(min(Location_Groups$Average_SL_Increase),
max(Location_Groups$Average_SL_Increase),
length.out = 5), 2),
title = "Average SL Increase (mm)")
map
View(`NEW_YORK_(THE_BATTERY)`)
View(PORT_JEFFERSON)
View(Location_Groups)
View(`BERGEN_POINT,_STATEN_IS.`)
View(data)
#save as csvs
write.csv('BERGEN_POINT,_STATEN_IS.'
, "Bergen.csv", row.names = FALSE)
# Download the CSV file
file_url <- "Bergen.csv"
download.file(file_url, destfile = "Bergen.csv.csv", mode = "wb")
data <- read.csv("C:/Users/Madeline/OneDrive/Documents/.github/Data_Competition_2024/SL_DATA.csv")
NY_Data <- data[data$Latitude >= 39.5 & data$Latitude <= 50 & data$Longitude >= -75 & data$Longitude <= -73, ]
# Group by name
NY_Data_groups <- split(NY_Data, NY_Data$Name)
for (i in seq_along(NY_Data_groups)) {
# Replace spaces with underscores in the name
df_name <- paste0("df", i)
# Assign the group to a new data frame with the modified name
assign(df_name, NY_Data_groups[[i]])
}
View(df7)
View(df6)
View(df5)
View(df5)
View(df4)
View(df3)
View(df2)
View(df2)
View(df1)
View(df1)
write.csv(df1, "Bergen.csv", row.names = FALSE)
# Download the CSV file
file_url <- "Bergen.csv.csv"
download.file(file_url, destfile = "Bergen.csv.csv", mode = "wb")
write.csv(df1, "Bergen.csv", row.names = FALSE)
# Download the CSV file
file_url <- "Bergen.csv"
download.file(file_url, destfile = "Bergen.csv", mode = "wb")
# Write dataframe to a CSV file
write.csv(df1, "Bergen.csv", row.names = FALSE)
# Download the CSV file
file_name <- "Bergen.csv"
download.file(file_name, destfile = file_name, mode = "wb")
write.csv(df1, "Bergen.csv", row.names = FALSE)
getwd()
View(df2)
write.csv(df2, "Bridgeport.csv", row.names = FALSE)
View(df3)
write.csv(df2, "Rochelle.csv", row.names = FALSE)
View(df4)
write.csv(df2, "NYBattery.csv", row.names = FALSE)
write.csv(df2, "Rochelle.csv", row.names = FALSE)
write.csv(df3, "Rochelle.csv", row.names = FALSE)
write.csv(df4, "NYBattery.csv", row.names = FALSE)
View(df5)
View(df6)
View(df7)
write.csv(df5, "PortJefferson.csv", row.names = FALSE)
write.csv(df6, "SandyHook.csv", row.names = FALSE)
write.csv(df6, "WilletsPoint.csv", row.names = FALSE)
library(ggplot2)
library(tidyverse)
library(plot3D)
library(corrplot)
library(leaflet)
data <- read.csv("C:/Users/Madeline/OneDrive/Documents/.github/Data_Competition_2024/SL_DATA.csv")
data_groups <- split(data, data$Name)
for (name in names(data_groups)) {
# Replace spaces with underscores in the name
df_name <- gsub(" ", "_", name)
# Assign the group to a new data frame with the modified name
assign(df_name, data_groups[[name]])
}
# create new column for m in y = mx + b (average increase of sea level)
All_Ms <- numeric(length(data_groups))
for(i in 1:length(data_groups))
{
df <- data_groups[[i]]
lm_model <- lm(SL_mm ~ Year, data = df)
m <- coef(lm_model)[2]
All_Ms[i] <- m
}
#rank each location by average increase in SL (high to lo)
Location_Groups <- data |> group_by(Name) |>
summarise(
Longitude = mean(Longitude),
Latitude = mean(Latitude),
Max_SL = max(SL_mm),
Min_SL = min(SL_mm)
)
Location_Groups$Average_SL_Increase <- All_Ms
Location_Groups <- Location_Groups |>
arrange(desc(Average_SL_Increase))
dfName = BRIDGEPORT
#calculate total increase
dfName <- dfName[order(dfName$Year), ]
difference <- tail(dfName$SL_mm, 1) - head(dfName$SL_mm, 1)
cat("From the year 1900 to the end of 2021, the sea level in",
dfName$Name[1], " changed by", difference, "mm.")
#calculate average "error" caused by inv barometrics
average_error <- mean(dfName$Inv_Bar_Contribution)
cat("The average amount of Sea Level change in milimeters caused by the “inverted barometer” effect
for", dfName$Name[1], "is", average_error)
#correlation plot
correlation_matrix <- cor(dfName[c("SL_mm", "Year")])
corrplot(correlation_matrix,
method = "color",
type = "upper",
addCoef.col = "black",
tl.col = "black",
tl.srt = 45,
main = paste(dfName$Name[1], "Sea Level and Year Correlation"),
mar = c(0,0,2,0))
#plot sea level by year and provide linear regression line
lm_model <- lm(SL_mm ~ Year, data = dfName)
intercept <- coef(lm_model)[1]
slope <- coef(lm_model)[2]
equation <- paste("y =", round(intercept, 2), "+", round(slope, 2), "* x")
ggplot(data = dfName, aes(x = Year, y = SL_mm)) +
geom_line() + geom_smooth(method = "lm", se = TRUE, color = "blue") +
labs(title = paste(dfName$Name[1], "Sea Level (mm) By Year"), y = "Sea Level (mm)",
subtitle = "Linear regression equation displayed below plot",
caption = equation)
# Correlation Heatmap
correlation_matrix <- cor(Location_Groups[c("Average_SL_Increase", "Longitude", "Latitude")])
corrplot(correlation_matrix, method = "color", type = "upper",
addCoef.col = "black", tl.col = "black", tl.srt = 45)
View(Location_Groups)
View(BRIDGEPORT)
correlation_matrix <- cor(dfName[c("SL_mm", "Year")])
corrplot(correlation_matrix,
method = "color",
type = "upper",
addCoef.col = "black",
tl.col = "black",
tl.srt = 45,
main = paste(dfName$Name[1], "Sea Level and Year Correlation"),
mar = c(0,0,2,0))
subset_data <- BRIDGEPORT[c("Year", "SL_mm", "Inv_Bar_Contribution", "Inv_Bar_Effects")]
# Calculate the correlation matrix
correlation_matrix <- cor(subset_data)
# Load the 'corrplot' library if not already loaded
if (!requireNamespace("corrplot", quietly = TRUE)) {
install.packages("corrplot")
}
library(corrplot)
# Create the correlation heatmap
corrplot(correlation_matrix, method = "color", type = "upper",
addCoef.col = "black", tl.col = "black", tl.srt = 45)
corrplot(correlation_matrix, method = "color", type = "upper",
addCoef.col = "black", tl.col = "black", tl.srt = 45,
main = "Figure 3: Correlation Heatmap for BRIDGEPORT")
corrplot(correlation_matrix, method = "color", type = "upper",
addCoef.col = "black", tl.col = "black", tl.srt = 45,
main = "Figure 3: Correlation Heatmap for BRIDGEPORT",
mar = c(5, 5, 5, 5))
corrplot(correlation_matrix, method = "color", type = "upper",
addCoef.col = "black", tl.col = "black", tl.srt = 45,
main = "Figure 3: Correlation Heatmap for BRIDGEPORT",
mar = c(5, 5, 5, 5),  # Adjust top margin (5) for the title
width = 8, height = 8)
